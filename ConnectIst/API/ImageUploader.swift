//
//  ImageUploder.swift
//  ConnectIst
//
//  Created by Nazmi Yavuz on 20.02.2021.
//

import UIKit

struct ImageUploader {
    
    static let shared = ImageUploader()
    
    //MARK: - Upload
    
    // sent request to the server to upload the Image (ava/cover)
    func uploadImage(from imageView: UIImageView, imageViewTapped: String,
                     selfVC: UIViewController) {
        
        // save method of accessing ID of current user
        guard let id = currentUser?.id else {
            return
        }
        
        let idString = String(id)
        // STEP 1. Declare URL, Request and Params
        // url we gonna access (API)
        let url = URL(string: "http://localhost/connectIst/uploadImage.php")!
        
        // declaring reqeust with further configs
        var request = URLRequest(url: url)
        
        // POST - safest method of passing data to the server
        request.httpMethod = "POST"
        
        // values to be sent to the server under keys (e.g. ID, TYPE)
        let params = ["id": idString, "type": imageViewTapped]
        
        // MIME Boundary, Header
        let boundary = "Boundary-\(NSUUID().uuidString)"
        request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
        
        // if in the imageView is placeholder - send no picture to the server
        // Compressing image and converting image to 'Data' type
        var imageData = Data()
        
        if imageView.image != UIImage(named: "HomeCover.jpg") && imageView.image != UIImage(named: "user.png") {
            imageData = imageView.image!.jpegData(compressionQuality: 0.5)!
        }
        
        // assigning full body to the request to be sent to the server
        request.httpBody = Helper().body(with: params, filename: "\(imageViewTapped).jpg", filePathKey: "file", imageDataKey: imageData, boundary: boundary) as Data
        
        URLSession.shared.dataTask(with: request) { (data, response, error) in
            DispatchQueue.main.async {
                
                // error occurred
                if error != nil {
                    Helper.shared.showAlert(title: "Server Error", message: error!.localizedDescription, in: selfVC)
                    return
                }
                
                
                do {
                    
                    // save mode of casting any data
                    guard let data = data else {
                        Helper.shared.showAlert(title: "Data Error", message: error!.localizedDescription, in: selfVC)
                        return
                    }
                    
                    let stringData = String(data: data, encoding: String.Encoding.utf8)
                    print("DEBUG: \(String(describing: stringData!))")
                    
                    // fetching JSON generated by the server - php file
                    let json = try JSONSerialization.jsonObject(with: data, options: .allowFragments) as? NSDictionary
                    
                    // save method of accessing json casting
                    guard let parsedJSON = json else { return }
                    print("DEBUG: Parsed JSON data is written below \nDEBUG: \(parsedJSON)")
                    
                    // uploaded successfully
                    if parsedJSON["status"] as! String == "200" {
                        
                        
                        // saving uploaded user related information (e.g. ava's path, cover's path)
                        if imageViewTapped == "cover"{
                            let currentUserCover = parsedJSON["cover"] as? String
                            UserDefaults.standard.set(currentUserCover, forKey: "currentUserCover")
                        } else if imageViewTapped == "ava" {
                            let currentUserAva = parsedJSON["ava"] as? String
                            UserDefaults.standard.set(currentUserAva, forKey: "currentUserAva")
                        }
                        
                        
                    // error while uploading
                    } else {
                        // show the error message in alert
                        if parsedJSON["message"] != nil {
                            let message = parsedJSON["message"] as! String
                            Helper.shared.showAlert(title: "Error", message: message, in: selfVC)
                        }
                    }
                    
                    
                } catch {
                    Helper.shared.showAlert(title: "JSON Error", message: error.localizedDescription, in: selfVC)
                }
            }
        }.resume()
    }
    
    //MARK: - Update
    
    // sent request to the server to upload the Image (ava/cover)
    func updateImage(from imageView: UIImageView, imageViewTapped: String, isAvaTrue: Bool,
                     isCoverTrue:Bool, selfVC: UIViewController) {
        
        // save method of accessing ID of current user
        var idString = String()
        if let id = currentUser?.id {
            idString = String(id)
        }
        // STEP 1. Declare URL, Request and Params
        // url we gonna access (API)
        let url = URL(string: "http://localhost/connectIst/uploadImage.php")!
        
        // declaring reqeust with further configs
        var request = URLRequest(url: url)
        
        // POST - safest method of passing data to the server
        request.httpMethod = "POST"
        
        // values to be sent to the server under keys (e.g. ID, TYPE)
        let params = ["id": idString, "type": imageViewTapped]
        
        // MIME Boundary, Header
        let boundary = "Boundary-\(NSUUID().uuidString)"
        request.setValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
        
        // if in the imageView is placeholder - send no picture to the server
        // Compressing image and converting image to 'Data' type
        var imageData = Data()
        
        if imageView.image != UIImage(named: "HomeCover.jpg") && imageView.image != UIImage(named: "user.png") {
            imageData = imageView.image!.jpegData(compressionQuality: 0.5)!
        }
        
        // assigning full body to the request to be sent to the server
        request.httpBody = Helper.shared.body(with: params, filename: "\(imageViewTapped).jpg", filePathKey: "file", imageDataKey: imageData, boundary: boundary) as Data
        
        URLSession.shared.dataTask(with: request) { (data, response, error) in
            DispatchQueue.main.async {
                
                // error occurred
                if error != nil {
                    Helper.shared.showAlert(title: "Server Error", message: error!.localizedDescription, in: selfVC)
                    return
                }
                
                
                do {
                    
                    // save mode of casting any data
                    guard let data = data else {
                        Helper.shared.showAlert(title: "Data Error", message: error!.localizedDescription, in: selfVC)
                        return
                    }
                    
//                    let stringData = String(data: data, encoding: String.Encoding.utf8)
//                    print("DEBUG: \(String(describing: stringData!))")
                    
                    // fetching JSON generated by the server - php file
                    let json = try JSONSerialization.jsonObject(with: data, options: .allowFragments) as? NSDictionary
                    
                    // save method of accessing json casting
                    guard let parsedJSON = json else { return }
                    print("DEBUG: Parsed JSON data is written below \nDEBUG: \(parsedJSON)")
                    
                    // uploaded successfully
                    if parsedJSON["status"] as! String == "200" {
                        
                        // saving uploaded user related information (e.g. ava's path, cover's path)
                        if isCoverTrue {
                            let currentUserCover = parsedJSON["cover"] as? String
                            UserDefaults.standard.set(currentUserCover, forKey: "currentUserCover")
                            
                        } else if isAvaTrue {
                            let currentUserAva = parsedJSON["ava"] as? String
                            UserDefaults.standard.set(currentUserAva, forKey: "currentUserAva")
                            
                        }
                        
                        // sending notification to other vcs
                        NotificationCenter.default.post(name: NSNotification.Name(rawValue: "updateBio"), object: nil)
                        
                    // error while uploading
                    } else {
                        // show the error message in alert
                        if parsedJSON["message"] != nil {
                            let message = parsedJSON["message"] as! String
                            Helper.shared.showAlert(title: "Error", message: message, in: selfVC)
                        }
                    }
                    
                    
                } catch {
                    Helper.shared.showAlert(title: "JSON Error", message: error.localizedDescription, in: selfVC)
                }
            }
        }.resume()
    }
    
    

    
}
